package model;

public final class PC {
    public static final Token PLUS = Token.getInstance( "+", TokenTypes.typeIds.get( "+" ) );
    public static final Token MINUS = Token.getInstance( "-", TokenTypes.typeIds.get("-") );
    public static final Token MULT = Token.getInstance( "*", TokenTypes.typeIds.get("*") );
    public static final Token DIV = Token.getInstance( "/", TokenTypes.typeIds.get("/") );
    public static final Token MOD = Token.getInstance( "%", TokenTypes.typeIds.get("%") );
    public static final Token ASIG = Token.getInstance( "=", TokenTypes.typeIds.get("=") );
    public static final Token LESSER = Token.getInstance( "<", TokenTypes.typeIds.get("<") );
    public static final Token GREATER = Token.getInstance( ">", TokenTypes.typeIds.get(">") );
    public static final Token LESSER_EQUAL = Token.getInstance( "<=", TokenTypes.typeIds.get("<=") );
    public static final Token GREATER_EQUAL = Token.getInstance( ">=", TokenTypes.typeIds.get(">=") );
    public static final Token EQUALS = Token.getInstance( "==", TokenTypes.typeIds.get("==") );
    public static final Token AND = Token.getInstance( "&&", TokenTypes.typeIds.get("&&") );
    public static final Token OR = Token.getInstance( "||", TokenTypes.typeIds.get("||") );
    public static final Token DIFF = Token.getInstance( "!=", TokenTypes.typeIds.get("!=") );
    public static final Token NEG = Token.getInstance( "!", TokenTypes.typeIds.get("!") );
    public static final Token COLON = Token.getInstance( ":", TokenTypes.typeIds.get(":") );
    public static final Token SEMI_COLON = Token.getInstance( ";", TokenTypes.typeIds.get(";") );
    public static final Token COMMA = Token.getInstance( ",", TokenTypes.typeIds.get(",") );
    public static final Token DOT = Token.getInstance( ".", TokenTypes.typeIds.get(".") );
    public static final Token LEFT_PAR = Token.getInstance( "(", TokenTypes.typeIds.get("(") );
    public static final Token RIGHT_PAR = Token.getInstance( ")", TokenTypes.typeIds.get(")") );
    public static final Token ID = Token.getInstance( "identificador", TokenTypes.IDENTIFIER );
    public static final Token INT_VAL = Token.getInstance( "valor_entero", TokenTypes.INTEGER );
    public static final Token REAL_VAL = Token.getInstance( "valor_real", TokenTypes.REAL );
    public static final Token CHAR_VAL = Token.getInstance( "valor_caracter", TokenTypes.CHARACTER );
    public static final Token STRING_VAL = Token.getInstance( "valor_cadena", TokenTypes.STRING );
    public static final Token MAIN_START = Token.getInstance( "funcion_principal", TokenTypes.KEYWORD );
    public static final Token MAIN_END = Token.getInstance( "fin_principal", TokenTypes.KEYWORD );
    public static final Token READ = Token.getInstance( "leer", TokenTypes.KEYWORD );
    public static final Token PRINT = Token.getInstance( "imprimir", TokenTypes.KEYWORD );
    public static final Token BOOL = Token.getInstance( "booleano", TokenTypes.KEYWORD );
    public static final Token CHAR = Token.getInstance( "caracter", TokenTypes.KEYWORD );
    public static final Token INT = Token.getInstance( "entero", TokenTypes.KEYWORD );
    public static final Token REAL = Token.getInstance( "real", TokenTypes.KEYWORD );
    public static final Token STRING = Token.getInstance( "cadena", TokenTypes.KEYWORD );
    public static final Token IF = Token.getInstance( "si", TokenTypes.KEYWORD );
    public static final Token THEN = Token.getInstance( "entonces", TokenTypes.KEYWORD );
    public static final Token IF_END = Token.getInstance( "fin_si", TokenTypes.KEYWORD );
    public static final Token ELSE = Token.getInstance( "si_no", TokenTypes.KEYWORD );
    public static final Token WHILE = Token.getInstance( "mientras", TokenTypes.KEYWORD );
    public static final Token DO = Token.getInstance( "hacer", TokenTypes.KEYWORD );
    public static final Token WHILE_END = Token.getInstance( "fin_mientras", TokenTypes.KEYWORD );
    public static final Token FOR = Token.getInstance( "para", TokenTypes.KEYWORD );
    public static final Token FOR_END = Token.getInstance( "fin_para", TokenTypes.KEYWORD );
    public static final Token SELECT = Token.getInstance( "seleccionar", TokenTypes.KEYWORD );
    public static final Token BETWEEN = Token.getInstance( "entre", TokenTypes.KEYWORD );
    public static final Token CASE = Token.getInstance( "caso", TokenTypes.KEYWORD );
    public static final Token BREAK = Token.getInstance( "romper", TokenTypes.KEYWORD );
    public static final Token DEFAULT = Token.getInstance( "defecto", TokenTypes.KEYWORD );
    public static final Token SELECT_END = Token.getInstance( "fin_seleccionar", TokenTypes.KEYWORD );
    public static final Token STRUCT = Token.getInstance( "estructura", TokenTypes.KEYWORD );
    public static final Token STRUCT_END = Token.getInstance( "fin_estructura", TokenTypes.KEYWORD );
    public static final Token FUNCT = Token.getInstance( "funcion", TokenTypes.KEYWORD );
    public static final Token FUNCT_END = Token.getInstance( "fin_funcion", TokenTypes.KEYWORD );
    public static final Token RETURN = Token.getInstance( "retornar", TokenTypes.KEYWORD );
    public static final Token FALSE = Token.getInstance( "falso", TokenTypes.KEYWORD );
    public static final Token TRUE = Token.getInstance( "verdadero", TokenTypes.KEYWORD );
    public static final Token EOF = Token.getInstance( "EOF", TokenTypes.EOF );
}
